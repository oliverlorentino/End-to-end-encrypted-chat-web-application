# generated 2024-04-04, Mozilla Guideline v5.7, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.7

events {
  worker_connections  1024;  ## Default: 1024
}
http {

    limit_req_zone
    $binary_remote_addr
    zone=persec:10m
    rate=8r/s;

    server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 8443 ssl;
    listen [::]:8443 ssl;
    http2 on;
    server_name *.comp3334.xavier2dc.fr;
    ssl_certificate /etc/nginx/ssl/TLServer.crt;
    ssl_certificate_key /etc/nginx/ssl/TLServer.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    #ssl_dhparam /path/to/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.3;
    ssl_ecdh_curve X25519;
    ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;
    ssl_prefer_server_ciphers off;
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=604800" always;

    # OCSP stapling
    ssl_stapling off;
    ssl_stapling_verify off;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate D:/End-to-end-encrypted-chat-web-application/Web/TLS/ca.crt;
    location / {
        limit_req zone=persec burst=5 nodelay;
        proxy_pass http://web:61117;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # replace with the IP address of your resolver
    resolver 127.0.0.1;
}
    
}